// <auto-generated />
using System;
using Examination_DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Examination_DAL.Migrations
{
    [DbContext(typeof(ExaminationDbContext))]
    partial class ExaminationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Examination_DAL.Models.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserPermissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = "longhd",
                            Password = "123456",
                            Status = (byte)1,
                            UserName = "longhd",
                            UserPermissionId = 4
                        },
                        new
                        {
                            Id = "chiupp",
                            Password = "123456",
                            Status = (byte)1,
                            UserName = "chiupp",
                            UserPermissionId = 4
                        },
                        new
                        {
                            Id = "admin",
                            Password = "123456",
                            Status = (byte)1,
                            UserName = "admin",
                            UserPermissionId = 1
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "4",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2109),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Content = "5",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2112),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Content = "6",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2116),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            Content = "7",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2117),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 1,
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            Content = "5",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2119),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            Content = "6",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2123),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            Content = "7",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2126),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            Content = "8",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2132),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 2,
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            Content = "6",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2134),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 3,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2134),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 10,
                            Content = "7",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2135),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 3,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2136),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 11,
                            Content = "8",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2137),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 3,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2138),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 12,
                            Content = "9",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2139),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 3,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2140),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 13,
                            Content = "7",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2141),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2142),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 14,
                            Content = "8",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2143),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2144),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 15,
                            Content = "9",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2145),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2145),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 16,
                            Content = "10",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2147),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 4,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2147),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 17,
                            Content = "8",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2152),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 18,
                            Content = "Tám",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2154),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 19,
                            Content = "12",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2155),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 20,
                            Content = "13",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2156),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 5,
                            Status = true
                        },
                        new
                        {
                            Id = 21,
                            Content = "13",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2157),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2158),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 22,
                            Content = "14",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2159),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2160),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 23,
                            Content = "15",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2161),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2162),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 24,
                            Content = "16",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2166),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 6,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2167),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 25,
                            Content = "10",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2168),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 7,
                            Status = true
                        },
                        new
                        {
                            Id = 26,
                            Content = "Mười",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2169),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 7,
                            Status = true
                        },
                        new
                        {
                            Id = 27,
                            Content = "19",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2174),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 7,
                            Status = true
                        },
                        new
                        {
                            Id = 28,
                            Content = "Ten",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2176),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 7,
                            Status = true
                        },
                        new
                        {
                            Id = 29,
                            Content = "21",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2177),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 8,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2177),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 30,
                            Content = "22",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2179),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 8,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2179),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 31,
                            Content = "23",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2180),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 8,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2181),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 32,
                            Content = "24",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2182),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 8,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2183),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 33,
                            Content = "25",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2185),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 9,
                            Status = true
                        },
                        new
                        {
                            Id = 34,
                            Content = "26",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2186),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 9,
                            Status = true
                        },
                        new
                        {
                            Id = 35,
                            Content = "27",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2187),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 9,
                            Status = true
                        },
                        new
                        {
                            Id = 36,
                            Content = "28",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2189),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 9,
                            Status = true
                        },
                        new
                        {
                            Id = 37,
                            Content = "XX",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2194),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 10,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2195),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 38,
                            Content = "30",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2196),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 10,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2196),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 39,
                            Content = "31",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2198),
                            CreatedBy = "admin",
                            IsCorrect = false,
                            QuestionId = 10,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2200),
                            UpdatedBy = "admin"
                        },
                        new
                        {
                            Id = 40,
                            Content = "20",
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2202),
                            CreatedBy = "admin",
                            IsCorrect = true,
                            QuestionId = 10,
                            Status = true,
                            UpdatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2202),
                            UpdatedBy = "admin"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.AnswerResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("AnswerAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("ExamResponseId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("ExamResponseId");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerResponses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2309),
                            AnswerId = 1,
                            ExamResponseId = 1,
                            IsCorrect = true,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2311),
                            AnswerId = 5,
                            ExamResponseId = 1,
                            IsCorrect = true,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 3,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2312),
                            AnswerId = 9,
                            ExamResponseId = 1,
                            IsCorrect = true,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 4,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2313),
                            AnswerId = 13,
                            ExamResponseId = 1,
                            IsCorrect = true,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 5,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2314),
                            AnswerId = 17,
                            ExamResponseId = 1,
                            IsCorrect = true,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 6,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2316),
                            AnswerId = 21,
                            ExamResponseId = 1,
                            IsCorrect = false,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 7,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2317),
                            AnswerId = 25,
                            ExamResponseId = 1,
                            IsCorrect = false,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 8,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2318),
                            AnswerId = 29,
                            ExamResponseId = 1,
                            IsCorrect = false,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 9,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2319),
                            AnswerId = 33,
                            ExamResponseId = 1,
                            IsCorrect = false,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 10,
                            AnswerAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2320),
                            AnswerId = 37,
                            ExamResponseId = 1,
                            IsCorrect = false,
                            QuestionId = 10
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Classroom", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = "IT10302",
                            Name = "Lớp IT10302"
                        },
                        new
                        {
                            Id = "IT10303",
                            Name = "Lớp IT10303"
                        },
                        new
                        {
                            Id = "IT10304",
                            Name = "Lớp IT10304"
                        },
                        new
                        {
                            Id = "IT10305",
                            Name = "Lớp IT10305"
                        },
                        new
                        {
                            Id = "IT10306",
                            Name = "Lớp IT10306"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ExamCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExamCode")
                        .IsUnique()
                        .HasFilter("[ExamCode] IS NOT NULL");

                    b.HasIndex("SubjectId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExamCode = "2023_Math_01",
                            Name = "Đề thi môn Toán sơ cấp",
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 2,
                            ExamCode = "2023_Math_02",
                            Name = "Đề thi môn Toán nâng cao",
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 3,
                            ExamCode = "2023_Eng_01",
                            Name = "Đề thi môn Tiếng Anh sơ cấp",
                            SubjectId = "ENG-01"
                        },
                        new
                        {
                            Id = 4,
                            ExamCode = "2023_Com1071",
                            Name = "Đề thi môn Tin học",
                            SubjectId = "COM1071"
                        },
                        new
                        {
                            Id = 5,
                            ExamCode = "2023_Pro131",
                            Name = "Đề thi môn Dự án 1",
                            SubjectId = "PRO131"
                        },
                        new
                        {
                            Id = 6,
                            ExamCode = "2024_Math_01",
                            Name = "Đề thi môn Toán sơ cấp",
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 7,
                            ExamCode = "2024_Math_02",
                            Name = "Đề thi môn Toán nâng cao",
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 8,
                            ExamCode = "2024_Eng_01",
                            Name = "Đề thi Cuối kỳ môn Tiếng Anh sơ cấp",
                            SubjectId = "ENG-01"
                        },
                        new
                        {
                            Id = 9,
                            ExamCode = "2024_Com1071",
                            Name = "Đề thi môn Tin học",
                            SubjectId = "COM1071"
                        },
                        new
                        {
                            Id = 10,
                            ExamCode = "2024_Pro131",
                            Name = "Đề thi môn Dự án 1",
                            SubjectId = "PRO131"
                        },
                        new
                        {
                            Id = 11,
                            ExamCode = "2025_Math_01",
                            Name = "Đề thi môn Toán sơ cấp",
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 12,
                            ExamCode = "2025_Math_02",
                            Name = "Đề thi môn Toán nâng cao",
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 13,
                            ExamCode = "2026_Math_01",
                            Name = "Đề thi môn Toán sơ cấp",
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 14,
                            ExamCode = "2026_Math_02",
                            Name = "Đề thi môn Toán nâng cao",
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 15,
                            ExamCode = "2026_Eng_01",
                            Name = "Đề thi môn Tiếng Anh sơ cấp",
                            SubjectId = "ENG-01"
                        },
                        new
                        {
                            Id = 16,
                            ExamCode = "2026_Com1071",
                            Name = "Đề thi môn Tin học",
                            SubjectId = "COM1071"
                        },
                        new
                        {
                            Id = 17,
                            ExamCode = "2026_Pro131",
                            Name = "Đề thi môn Dự án 1",
                            SubjectId = "PRO131"
                        },
                        new
                        {
                            Id = 18,
                            ExamCode = "2027_Math_01",
                            Name = "Đề thi môn Toán sơ cấp",
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 19,
                            ExamCode = "2027_Math_02",
                            Name = "Đề thi môn Toán nâng cao",
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 20,
                            ExamCode = "2027_Eng_01",
                            Name = "Đề thi môn Tiếng Anh sơ cấp",
                            SubjectId = "ENG-01"
                        },
                        new
                        {
                            Id = 21,
                            ExamCode = "2027_Com1071",
                            Name = "Đề thi môn Tin học",
                            SubjectId = "COM1071"
                        },
                        new
                        {
                            Id = 22,
                            ExamCode = "2027_Pro131",
                            Name = "Đề thi môn Dự án 1",
                            SubjectId = "PRO131"
                        },
                        new
                        {
                            Id = 23,
                            ExamCode = "2028_Math_01",
                            Name = "Đề thi môn Toán sơ cấp",
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 24,
                            ExamCode = "2028_Math_02",
                            Name = "Đề thi môn Toán nâng cao",
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 25,
                            ExamCode = "2028_Eng_01",
                            Name = "Đề thi môn Tiếng Anh sơ cấp",
                            SubjectId = "ENG-01"
                        },
                        new
                        {
                            Id = 26,
                            ExamCode = "2028_Com1071",
                            Name = "Đề thi môn Tin học",
                            SubjectId = "COM1071"
                        },
                        new
                        {
                            Id = 27,
                            ExamCode = "2028_Math_03",
                            Name = "Đề thi môn Toán SIEEU nâng cao",
                            SubjectId = "MATH-03"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ExamDetailCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<double>("MaxiumMark")
                        .HasColumnType("float");

                    b.Property<double>("PassMark")
                        .HasColumnType("float");

                    b.Property<int?>("ReTestNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TotalQuestion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ExamDetailCode")
                        .IsUnique();

                    b.HasIndex("ExamId");

                    b.ToTable("ExamDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1751),
                            CreatedBy = "admin",
                            Description = "Ma de 01",
                            Duration = 90,
                            ExamDetailCode = "001",
                            ExamId = 1,
                            MaxiumMark = 10.0,
                            PassMark = 5.0,
                            ReTestNumber = 1,
                            Status = true,
                            TotalQuestion = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1780),
                            CreatedBy = "admin",
                            Description = "Ma de 02 - MATH 03",
                            Duration = 90,
                            ExamDetailCode = "MATH-03_002",
                            ExamId = 27,
                            MaxiumMark = 10.0,
                            PassMark = 5.0,
                            ReTestNumber = 1,
                            Status = true,
                            TotalQuestion = 10
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1784),
                            CreatedBy = "admin",
                            Description = "Ma de 02",
                            Duration = 90,
                            ExamDetailCode = "002",
                            ExamId = 2,
                            MaxiumMark = 10.0,
                            PassMark = 5.0,
                            ReTestNumber = 1,
                            Status = true,
                            TotalQuestion = 10
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1786),
                            CreatedBy = "admin",
                            Description = "Ma de 03",
                            Duration = 90,
                            ExamDetailCode = "003",
                            ExamId = 3,
                            MaxiumMark = 10.0,
                            PassMark = 5.0,
                            ReTestNumber = 1,
                            Status = true,
                            TotalQuestion = 10
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1792),
                            CreatedBy = "admin",
                            Description = "Ma de 04",
                            Duration = 90,
                            ExamDetailCode = "004",
                            ExamId = 4,
                            MaxiumMark = 10.0,
                            PassMark = 5.0,
                            ReTestNumber = 1,
                            Status = true,
                            TotalQuestion = 10
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExamDetailId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ExamDetailId");

                    b.HasIndex("QuestionId");

                    b.ToTable("ExamQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExamDetailId = 1,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExamDetailId = 1,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 3,
                            ExamDetailId = 1,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 4,
                            ExamDetailId = 1,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 5,
                            ExamDetailId = 1,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 6,
                            ExamDetailId = 1,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 7,
                            ExamDetailId = 1,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 8,
                            ExamDetailId = 1,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 9,
                            ExamDetailId = 1,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 10,
                            ExamDetailId = 1,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 11,
                            ExamDetailId = 2,
                            QuestionId = 11
                        },
                        new
                        {
                            Id = 12,
                            ExamDetailId = 2,
                            QuestionId = 12
                        },
                        new
                        {
                            Id = 13,
                            ExamDetailId = 2,
                            QuestionId = 13
                        },
                        new
                        {
                            Id = 14,
                            ExamDetailId = 2,
                            QuestionId = 14
                        },
                        new
                        {
                            Id = 15,
                            ExamDetailId = 2,
                            QuestionId = 15
                        },
                        new
                        {
                            Id = 16,
                            ExamDetailId = 2,
                            QuestionId = 16
                        },
                        new
                        {
                            Id = 17,
                            ExamDetailId = 2,
                            QuestionId = 17
                        },
                        new
                        {
                            Id = 18,
                            ExamDetailId = 2,
                            QuestionId = 18
                        },
                        new
                        {
                            Id = 19,
                            ExamDetailId = 2,
                            QuestionId = 19
                        },
                        new
                        {
                            Id = 20,
                            ExamDetailId = 2,
                            QuestionId = 20
                        },
                        new
                        {
                            Id = 21,
                            ExamDetailId = 3,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 22,
                            ExamDetailId = 3,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 23,
                            ExamDetailId = 3,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 24,
                            ExamDetailId = 3,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 25,
                            ExamDetailId = 3,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 26,
                            ExamDetailId = 3,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 27,
                            ExamDetailId = 3,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 28,
                            ExamDetailId = 3,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 29,
                            ExamDetailId = 3,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 30,
                            ExamDetailId = 3,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 31,
                            ExamDetailId = 4,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 32,
                            ExamDetailId = 4,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 33,
                            ExamDetailId = 4,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 34,
                            ExamDetailId = 4,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 35,
                            ExamDetailId = 4,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 36,
                            ExamDetailId = 4,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 37,
                            ExamDetailId = 4,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 38,
                            ExamDetailId = 4,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 39,
                            ExamDetailId = 4,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 40,
                            ExamDetailId = 4,
                            QuestionId = 10
                        },
                        new
                        {
                            Id = 41,
                            ExamDetailId = 5,
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 42,
                            ExamDetailId = 5,
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 43,
                            ExamDetailId = 5,
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 44,
                            ExamDetailId = 5,
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 45,
                            ExamDetailId = 5,
                            QuestionId = 5
                        },
                        new
                        {
                            Id = 46,
                            ExamDetailId = 5,
                            QuestionId = 6
                        },
                        new
                        {
                            Id = 47,
                            ExamDetailId = 5,
                            QuestionId = 7
                        },
                        new
                        {
                            Id = 48,
                            ExamDetailId = 5,
                            QuestionId = 8
                        },
                        new
                        {
                            Id = 49,
                            ExamDetailId = 5,
                            QuestionId = 9
                        },
                        new
                        {
                            Id = 50,
                            ExamDetailId = 5,
                            QuestionId = 10
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExamDetailId")
                        .HasColumnType("int");

                    b.Property<double?>("FinishTime")
                        .HasColumnType("float");

                    b.Property<bool?>("IsPassed")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("QuestionCorrect")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionNotAnswered")
                        .HasColumnType("int");

                    b.Property<int?>("QuestionWrong")
                        .HasColumnType("int");

                    b.Property<double?>("Score")
                        .HasColumnType("float");

                    b.Property<string>("ScoredBy")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool?>("ScoredMethod")
                        .HasColumnType("bit");

                    b.Property<string>("StaffId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SubmitTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamDetailId");

                    b.HasIndex("ParticipantId");

                    b.HasIndex("StaffId");

                    b.HasIndex("SubjectId");

                    b.ToTable("ExamResponses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExamDetailId = 1,
                            FinishTime = 30.0,
                            IsPassed = false,
                            ParticipantId = "chiupp",
                            SubjectId = "MATH-01",
                            SubmitTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2291)
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamRoom", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ExamRooms");

                    b.HasData(
                        new
                        {
                            Id = "P101",
                            Address = "Tầng 1, Nhà P",
                            Capacity = 50,
                            Name = "Phòng 101",
                            Note = "Phòng thi có điều hòa",
                            Status = true
                        },
                        new
                        {
                            Id = "P102",
                            Address = "Tầng 1, Nhà P",
                            Capacity = 50,
                            Name = "Phòng 102",
                            Note = "Phòng thi có điều hòa",
                            Status = true
                        },
                        new
                        {
                            Id = "P103",
                            Address = "Tầng 1, Nhà P",
                            Capacity = 50,
                            Name = "Phòng 103",
                            Note = "Phòng thi có điều hòa",
                            Status = true
                        },
                        new
                        {
                            Id = "P104",
                            Address = "Tầng 1, Nhà P",
                            Capacity = 50,
                            Name = "Phòng 104",
                            Note = "Phòng thi có điều hòa",
                            Status = true
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClassRoomId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("ExamRoomId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ExamId");

                    b.HasIndex("ExamRoomId");

                    b.ToTable("ExamSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "admin",
                            Description = "Kỳ thi cuối kỳ môn Toán sơ cấp",
                            EndTime = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExamId = 1,
                            ExamRoomId = "P104",
                            Name = "Kỳ thi cuối kỳ",
                            StartTime = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Subject = "Toán sơ cấp"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamScheduleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExamScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ExamScheduleId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("ExamScheduleDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExamScheduleId = 1,
                            ParticipantId = "longhd"
                        },
                        new
                        {
                            Id = 2,
                            ExamScheduleId = 1,
                            ParticipantId = "chiupp"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<string>("IdParticipant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SubmitTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Examination_DAL.Models.Participant", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(1);

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ClassroomId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            Id = "longhd",
                            AccountId = "longhd",
                            Address = "Hà Nội",
                            ClassroomId = "IT10302",
                            DateOfBirth = new DateTime(2004, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hoanglong.cmb@gmail.com",
                            FullName = "Hoàng Duy Long",
                            Gender = true,
                            PhoneNumber = "0987654321",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = "chiupp",
                            AccountId = "chiupp",
                            Address = "Thập vạn Đại sơn",
                            ClassroomId = "IT10302",
                            DateOfBirth = new DateTime(1990, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "chiupangpang.cmb@gmail.com",
                            FullName = "Chiu Pằng Pằng",
                            Gender = true,
                            PhoneNumber = "0987654321",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Permission", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Quản trị viên"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Giáo viên"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Cán bộ"
                        },
                        new
                        {
                            Id = (byte)4,
                            Name = "Thí sinh"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Docs")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Point")
                        .HasColumnType("float");

                    b.Property<byte?>("QuestionLevelId")
                        .IsRequired()
                        .HasColumnType("tinyint")
                        .HasColumnOrder(3);

                    b.Property<byte?>("QuestionTypeId")
                        .IsRequired()
                        .HasColumnType("tinyint")
                        .HasColumnOrder(2);

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("QuestionLevelId");

                    b.HasIndex("QuestionTypeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "2 + 2 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1936),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 2,
                            Content = "2 + 3 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1939),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 3,
                            Content = "2 + 4 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1942),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 4,
                            Content = "2 + 5 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1944),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 5,
                            Content = "2 + 6 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1947),
                            Point = 0.75,
                            QuestionLevelId = (byte)3,
                            QuestionTypeId = (byte)2,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 6,
                            Content = "2 + 7 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1952),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)3,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 7,
                            Content = "2 + 8 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1954),
                            Point = 0.5,
                            QuestionLevelId = (byte)2,
                            QuestionTypeId = (byte)2,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 8,
                            Content = "2 + 9 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1956),
                            Point = 0.75,
                            QuestionLevelId = (byte)3,
                            QuestionTypeId = (byte)3,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 9,
                            Content = "2 + 10 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1960),
                            Point = 0.5,
                            QuestionLevelId = (byte)2,
                            QuestionTypeId = (byte)3,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 10,
                            Content = "10 + 10 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1962),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1963),
                            Point = 0.75,
                            QuestionLevelId = (byte)3,
                            QuestionTypeId = (byte)2,
                            Status = true,
                            SubjectId = "MATH-01"
                        },
                        new
                        {
                            Id = 11,
                            Content = "2 + 2 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1972),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1973),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 12,
                            Content = "2 + 3 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1975),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(1975),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 13,
                            Content = "2 + 4 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2026),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2027),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 14,
                            Content = "2 + 5 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2028),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2031),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 15,
                            Content = "2 + 6 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2033),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2033),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 16,
                            Content = "2 + 7 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2037),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2038),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 17,
                            Content = "2 + 8 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2039),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 18,
                            Content = "2 + 9 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2047),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 19,
                            Content = "2 + 10 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2051),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 20,
                            Content = "10 + 10 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2053),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)2,
                            Status = true,
                            SubjectId = "MATH-02"
                        },
                        new
                        {
                            Id = 21,
                            Content = "2 + 2 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2058),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 22,
                            Content = "2 + 3 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2060),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 23,
                            Content = "2 + 4 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2062),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2062),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 24,
                            Content = "2 + 5 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2064),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2064),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 25,
                            Content = "2 + 6 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2066),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2066),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 26,
                            Content = "2 + 7 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2068),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2068),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 27,
                            Content = "2 + 8 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2070),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2072),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 28,
                            Content = "2 + 9 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2078),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2079),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        },
                        new
                        {
                            Id = 29,
                            Content = "2 + 10 = ?",
                            CreatedBy = "admin",
                            CreatedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2080),
                            ModifiedBy = "admin",
                            ModifiedTime = new DateTime(2023, 12, 1, 22, 44, 23, 521, DateTimeKind.Local).AddTicks(2081),
                            Point = 0.25,
                            QuestionLevelId = (byte)1,
                            QuestionTypeId = (byte)1,
                            Status = true,
                            SubjectId = "MATH-03"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.QuestionLevel", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("QuestionLevels");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Dễ"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Trung bình"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Nâng cao"
                        },
                        new
                        {
                            Id = (byte)4,
                            Name = "Vận dụng cao"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.QuestionType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("QuestionTypes");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Chọn câu trả lời đúng nhất"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "Chọn các đáp án đúng"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Chọn Đúng hoặc Sai"
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte?>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = "admin",
                            AccountId = "admin",
                            Address = "Hà Nội",
                            DateOfBirth = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            FullName = "Admin",
                            PhoneNumber = "0987654321",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = "COM1071",
                            Name = "Tin học",
                            Status = (byte)0
                        },
                        new
                        {
                            Id = "PRO131",
                            Name = "Dự án 1",
                            Status = (byte)0
                        },
                        new
                        {
                            Id = "MATH-01",
                            Name = "Toán sơ cấp",
                            Status = (byte)0
                        },
                        new
                        {
                            Id = "MATH-02",
                            Name = "Toán nâng cao",
                            Status = (byte)0
                        },
                        new
                        {
                            Id = "ENG-01",
                            Name = "Tiếng Anh sơ cấp",
                            Status = (byte)0
                        },
                        new
                        {
                            Id = "MATH-03",
                            Name = "Toán Sieu cao cấp",
                            Status = (byte)0
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte>("PermissionId")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("PermissionId");

                    b.ToTable("UserPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = "longhd",
                            PermissionId = (byte)4
                        },
                        new
                        {
                            Id = 2,
                            AccountId = "chiupp",
                            PermissionId = (byte)4
                        },
                        new
                        {
                            Id = 3,
                            AccountId = "admin",
                            PermissionId = (byte)1
                        });
                });

            modelBuilder.Entity("Examination_DAL.Models.Answer", b =>
                {
                    b.HasOne("Examination_DAL.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Examination_DAL.Models.AnswerResponse", b =>
                {
                    b.HasOne("Examination_DAL.Models.Answer", "Answer")
                        .WithMany("AnswerResponses")
                        .HasForeignKey("AnswerId");

                    b.HasOne("Examination_DAL.Models.ExamResponse", "ExamResponse")
                        .WithMany("AnswerResponses")
                        .HasForeignKey("ExamResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Question", "Question")
                        .WithMany("AnswerResponses")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("ExamResponse");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Examination_DAL.Models.Exam", b =>
                {
                    b.HasOne("Examination_DAL.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamDetail", b =>
                {
                    b.HasOne("Examination_DAL.Models.Staff", "Staff")
                        .WithMany("ExamDetails")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Exam", "Exam")
                        .WithMany("ExamDetails")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamQuestion", b =>
                {
                    b.HasOne("Examination_DAL.Models.ExamDetail", "ExamDetail")
                        .WithMany()
                        .HasForeignKey("ExamDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Question", "Question")
                        .WithOne()
                        .HasForeignKey("Examination_DAL.Models.ExamQuestion", "QuestionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExamDetail");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamResponse", b =>
                {
                    b.HasOne("Examination_DAL.Models.ExamDetail", "ExamDetail")
                        .WithMany()
                        .HasForeignKey("ExamDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Participant", "Participant")
                        .WithMany("ExamResponses")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Staff", null)
                        .WithMany("ExamResponses")
                        .HasForeignKey("StaffId");

                    b.HasOne("Examination_DAL.Models.Subject", "Subject")
                        .WithMany("ExamResponses")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ExamDetail");

                    b.Navigation("Participant");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamSchedule", b =>
                {
                    b.HasOne("Examination_DAL.Models.Classroom", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("ClassRoomId");

                    b.HasOne("Examination_DAL.Models.Staff", "Staff")
                        .WithMany("ExamSchedules")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Examination_DAL.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.ExamRoom", "ExamRoom")
                        .WithMany("ExamSchedules")
                        .HasForeignKey("ExamRoomId");

                    b.Navigation("ClassRoom");

                    b.Navigation("Exam");

                    b.Navigation("ExamRoom");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamScheduleDetail", b =>
                {
                    b.HasOne("Examination_DAL.Models.ExamSchedule", "ExamSchedule")
                        .WithMany("ExamScheduleDetail")
                        .HasForeignKey("ExamScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Participant", "Participant")
                        .WithMany("ExamScheduleDetails")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamSchedule");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("Examination_DAL.Models.Participant", b =>
                {
                    b.HasOne("Examination_DAL.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("Examination_DAL.Models.Classroom", "Classroom")
                        .WithMany("Participants")
                        .HasForeignKey("ClassroomId");

                    b.Navigation("Account");

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("Examination_DAL.Models.Question", b =>
                {
                    b.HasOne("Examination_DAL.Models.QuestionLevel", "QuestionLevel")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.QuestionType", "QuestionType")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Subject", "Subject")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionLevel");

                    b.Navigation("QuestionType");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Examination_DAL.Models.Staff", b =>
                {
                    b.HasOne("Examination_DAL.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Examination_DAL.Models.UserPermission", b =>
                {
                    b.HasOne("Examination_DAL.Models.Account", "Account")
                        .WithOne("UserPermission")
                        .HasForeignKey("Examination_DAL.Models.UserPermission", "AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Examination_DAL.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("Examination_DAL.Models.Account", b =>
                {
                    b.Navigation("UserPermission")
                        .IsRequired();
                });

            modelBuilder.Entity("Examination_DAL.Models.Answer", b =>
                {
                    b.Navigation("AnswerResponses");
                });

            modelBuilder.Entity("Examination_DAL.Models.Classroom", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("Examination_DAL.Models.Exam", b =>
                {
                    b.Navigation("ExamDetails");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamResponse", b =>
                {
                    b.Navigation("AnswerResponses");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamRoom", b =>
                {
                    b.Navigation("ExamSchedules");
                });

            modelBuilder.Entity("Examination_DAL.Models.ExamSchedule", b =>
                {
                    b.Navigation("ExamScheduleDetail");
                });

            modelBuilder.Entity("Examination_DAL.Models.Participant", b =>
                {
                    b.Navigation("ExamResponses");

                    b.Navigation("ExamScheduleDetails");
                });

            modelBuilder.Entity("Examination_DAL.Models.Question", b =>
                {
                    b.Navigation("AnswerResponses");

                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Examination_DAL.Models.QuestionLevel", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Examination_DAL.Models.QuestionType", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Examination_DAL.Models.Staff", b =>
                {
                    b.Navigation("ExamDetails");

                    b.Navigation("ExamResponses");

                    b.Navigation("ExamSchedules");
                });

            modelBuilder.Entity("Examination_DAL.Models.Subject", b =>
                {
                    b.Navigation("ExamResponses");

                    b.Navigation("Exams");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
